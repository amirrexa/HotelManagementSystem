@using HotelManagementSystem.Data;
@{
    ViewData["Title"] = "Assign Room";
}
@model (Room room, List<DropDownViewModel> customers)

<head>
    <script>
        function validateForm() {
            const customer = document.forms["AssignmentForm"]["CustomerId"].value;
            const toDateVal = document.getElementById("toDate").value,
                toDate = new Date(toDateVal); //Type: Date
            const paidAmount = document.forms["AssignmentForm"]["PaidAmount"].value;
            const currentDate = new Date();

            //customer Conditions:
            if (document.getElementById("customerError").innerHTML = (customer == "")) {
                document.getElementById("customerError").innerHTML = "A customer must be selected.";
            }
            else {
                document.getElementById("customerError").innerHTML = "";
            }

            //toDate Conditions:
            if ((document.getElementById("toDateError").innerHTML = (toDateVal == ''))) {
                document.getElementById("toDateError").innerHTML = "Ending date must be defined.";
            }
            else if ((document.getElementById("toDateError").innerHTML = (toDate < currentDate))) {
                document.getElementById("toDateError").innerHTML = "Ending date must be defined after the current date.";
            }
            else {
                document.getElementById("toDateError").innerHTML = "";
            }

            //paidAmount Conditions:
            if (document.getElementById("paidAmountError").innerHTML = (paidAmount < 0)) {
                document.getElementById("paidAmountError").innerHTML = "Paid amount must be more than zero.";
            }
            else if (document.getElementById("paidAmountError").innerHTML = (paidAmount == "")) {
                document.getElementById("paidAmountError").innerHTML = "Paid amount must be defined.";
            }
            else {
                document.getElementById("paidAmountError").innerHTML = "";
            }

            if (Array.prototype.slice.call(document.getElementsByClassName("error-message")).filter(e => e.innerHTML != '').length == 0)
                document.forms["AssignmentForm"].submit();
        }
    </script>
</head>

<blockquote>
    <form asp-action="Assign" asp-controller="Room" method="post" name="AssignmentForm" onsubmit="event.preventDefault(); validateForm();">
        <input type="hidden" name="RoomId" value="@Model.room.Id"> <!-- bayad room id ro dashte bashe ke khodemoon be soorate dasti midim behesh -->
        Choose a customer:<br /><select name="CustomerId">
            <option value="" selected></option>
            @foreach (var customer in Model.customers)
            {
                
                <option value="@customer.Id">@customer.Value</option>
            }
        </select>
        <p id="customerError" class="error-message" style="color:red"></p>
        <hr>
        <input type="hidden" name="FromDate" placeholder="Enter the starting date: " value="Date()" >
        To Date: <input type="date" name="ToDate" id="toDate" placeholder="Enter the end of reservation date: " >
        <p id="toDateError" class="error-message" style="color:red"></p>
        <hr>
        Paid Amount: <input type="text" name="PaidAmount" id="paidAmount" placeholder="Enter the paid amount: ">
        <p id="paidAmountError" class="error-message" style="color:red"></p>
        <hr>
        <button type="submit" class="btn btn-primary">Assign</button>
    </form>
</blockquote>